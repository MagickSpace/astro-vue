---
import { getEntry } from 'astro:content';

import FormattedDate from '@/components/FormattedDate.astro'

interface Props {
	authorFullName: string,
	pubDate: Date,
	updatedDate: Date
}
const { authorFullName  = '', pubDate, updatedDate } = Astro.props
let person: Person | undefined = people.find((person: { fullName: string; }) => person.fullName === authorFullName)
const hasAuthorLink: boolean = person !== undefined
const { lang, slug } = Astro.params;
const page = await getEntry('blog', `${lang}/${slug}`);

if (!page) {
  return Astro.redirect('/404');
}

const formattedDate = page.data.pubDate.toLocaleString(lang);
const { Content, remarkPluginFrontmatter } = await page.render();
---
<h1>{page.data.title}</h1>
<p>
	{authorFullName &&
		<>
			{hasAuthorLink && person && <span><a href={getPersonPath(Astro.currentLocale, person.id)}>{person.fullName}</a></span>}
			{!hasAuthorLink && <span>{authorFullName</span>}
			<span>, </span>
		</>
	}
	<FormattedDate date={pubDate} />
		{updatedDate && (
				<span >
					Last updated on <FormattedDate date={updatedDate} />
				</span>
			)
		}
</p>
<p>{remarkPluginFrontmatter.minutesRead}</p>
<Content/>